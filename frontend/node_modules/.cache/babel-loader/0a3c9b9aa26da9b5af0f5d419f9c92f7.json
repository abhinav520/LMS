{"ast":null,"code":"var _jsxFileName = \"D:\\\\LMS\\\\frontend\\\\src\\\\Components\\\\Login\\\\LoginForm.js\";\nimport React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginInputs = [{\n  label: \"User Name\",\n  type: \"text\",\n  show: true,\n  validated: \"\",\n  id: \"a\"\n}, {\n  label: \"Password\",\n  type: \"password\",\n  show: true,\n  validated: \"\",\n  id: \"b\"\n}];\nconst signupInputs = [{\n  label: \"User Name\",\n  type: \"text\",\n  show: false,\n  validated: \"\",\n  id: \"c\"\n}, {\n  label: \"Email\",\n  type: \"email\",\n  show: false,\n  validated: \"\",\n  id: \"d\"\n}, {\n  label: \"Password\",\n  type: \"password\",\n  show: false,\n  validated: \"\",\n  id: \"e\"\n}, {\n  label: \"Re-Enter Password\",\n  type: \"password\",\n  show: false,\n  validated: \"\",\n  id: \"f\"\n}];\nexport default LoginWrapper = React.createClass({\n  displayName: \"LoginWrapper\",\n\n  getInitialState() {\n    return {\n      signUp: false,\n      signupInputs: signupInputs,\n      loginInputs: loginInputs\n    };\n  },\n\n  inUpClick() {\n    this.setState({\n      signUp: !this.state.signUp\n    });\n    this.animateFields(\"signupInputs\");\n    setTimeout(() => {\n      this.animateFields(\"loginInputs\");\n    }, 100);\n  },\n\n  animateFields(formName) {\n    let start, length, newForm;\n\n    if (formName === \"loginInputs\") {\n      newForm = this.state.loginInputs.slice();\n    } else if (formName === \"signupInputs\") {\n      newForm = this.state.signupInputs.slice();\n    }\n\n    start = 0;\n    length = newForm.length;\n    console.log(newForm);\n\n    let stagger = i => {\n      if (i < length) {\n        setTimeout(() => {\n          newForm[i].show = !newForm[i].show;\n          this.setState({\n            [formName]: newForm\n          });\n          stagger(i + 1);\n        }, 70);\n      }\n    };\n\n    stagger(start);\n  },\n\n  submitForm(e) {\n    e.preventDefault();\n  },\n\n  validateField(event, id) {\n    let newState, fieldInState;\n    const value = event.target.value;\n\n    const getField = field => field.id === id;\n\n    const validate = v => v.length > 0;\n\n    if (this.state.signUp === true) {\n      newState = this.state.signupInputs.slice();\n      fieldInState = newState.find(getField);\n      fieldInState.validated = validate(value) ? true : false;\n      this.setState({\n        signupInputs: newState\n      });\n    } else {\n      newState = this.state.loginInputs.slice();\n      fieldInState = newState.find(getField);\n      fieldInState.validated = validate(value) ? true : false;\n      this.setState({\n        loginInputs: newState\n      });\n    }\n  },\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Login, {\n        signUp: this.state.signUp,\n        inputs: this.state.loginInputs,\n        inUpClick: this.inUpClick,\n        submitForm: this.submitForm,\n        validateField: this.validateField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignUp, {\n        signUp: this.state.signUp,\n        inputs: this.state.signupInputs,\n        inUpClick: this.inUpClick,\n        submitForm: this.submitForm,\n        validateField: this.validateField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n\n});\n\nconst Login = ({\n  inputs,\n  signUp,\n  inUpClick,\n  submitForm,\n  validateField\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: signUp ? \"login login-closed\" : \"login\",\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Log In\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Form, {\n    inputs: inputs,\n    submitForm: submitForm,\n    validateField: validateField\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(SignupLink, {\n    inUpClick: inUpClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 145,\n  columnNumber: 3\n}, this);\n\n_c = Login;\n\nconst SignUp = ({\n  inputs,\n  signUp,\n  inUpClick,\n  submitForm,\n  validateField\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: signUp ? \"sign-up\" : \"sign-up sign-up-closed\",\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Sign Up\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Form, {\n    inputs: inputs,\n    submitForm: submitForm,\n    validateField: validateField\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(LoginLink, {\n    inUpClick: inUpClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 158,\n  columnNumber: 3\n}, this);\n\n_c2 = SignUp;\n\nconst Form = ({\n  inputs,\n  submitForm,\n  validateField\n}) => {\n  const inputsMapped = inputs.map(i => /*#__PURE__*/_jsxDEV(Input, {\n    label: i.label,\n    type: i.type,\n    show: i.show,\n    validated: i.validated,\n    id: i.id,\n    validateField: validateField\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitForm,\n    children: [inputsMapped, /*#__PURE__*/_jsxDEV(Submit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Form;\n\nconst Submit = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"submit-button\",\n    type: \"submit\",\n    children: [\" \", \"Submit\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 191,\n  columnNumber: 3\n}, this);\n\n_c4 = Submit;\n\nconst Input = ({\n  label,\n  type,\n  show,\n  validated,\n  id,\n  validateField\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: show ? \"field field-in\" : \"field\",\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"label\",\n    children: [label, /*#__PURE__*/_jsxDEV(\"i\", {\n      className: validated ? \"fa fa-check animate-check\" : \"\",\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"input\",\n    type: type //   onBlur={() => {\n    //     validateField(event, id);\n    //   }}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 201,\n  columnNumber: 3\n}, this);\n\n_c5 = Input;\n\nconst SignupLink = ({\n  inUpClick\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"signup-link\",\n  children: /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"in-out\",\n    children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      onClick: inUpClick,\n      children: \"Sign Up Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 221,\n  columnNumber: 3\n}, this);\n\n_c6 = SignupLink;\n\nconst LoginLink = ({\n  inUpClick\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"signup-link\",\n  children: /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"in-out\",\n    children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      onClick: inUpClick,\n      children: \"Log In Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 232,\n  columnNumber: 3\n}, this);\n\n_c7 = LoginLink;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"SignUp\");\n$RefreshReg$(_c3, \"Form\");\n$RefreshReg$(_c4, \"Submit\");\n$RefreshReg$(_c5, \"Input\");\n$RefreshReg$(_c6, \"SignupLink\");\n$RefreshReg$(_c7, \"LoginLink\");","map":{"version":3,"sources":["D:/LMS/frontend/src/Components/Login/LoginForm.js"],"names":["React","useState","loginInputs","label","type","show","validated","id","signupInputs","LoginWrapper","createClass","getInitialState","signUp","inUpClick","setState","state","animateFields","setTimeout","formName","start","length","newForm","slice","console","log","stagger","i","submitForm","e","preventDefault","validateField","event","newState","fieldInState","value","target","getField","field","validate","v","find","render","Login","inputs","SignUp","Form","inputsMapped","map","Submit","Input","SignupLink","LoginLink"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./LoginPage.css\";\r\n\r\nconst loginInputs = [\r\n  {\r\n    label: \"User Name\",\r\n    type: \"text\",\r\n    show: true,\r\n    validated: \"\",\r\n    id: \"a\",\r\n  },\r\n  {\r\n    label: \"Password\",\r\n    type: \"password\",\r\n    show: true,\r\n    validated: \"\",\r\n    id: \"b\",\r\n  },\r\n];\r\n\r\nconst signupInputs = [\r\n  {\r\n    label: \"User Name\",\r\n    type: \"text\",\r\n    show: false,\r\n    validated: \"\",\r\n    id: \"c\",\r\n  },\r\n  {\r\n    label: \"Email\",\r\n    type: \"email\",\r\n    show: false,\r\n    validated: \"\",\r\n    id: \"d\",\r\n  },\r\n  {\r\n    label: \"Password\",\r\n    type: \"password\",\r\n    show: false,\r\n    validated: \"\",\r\n    id: \"e\",\r\n  },\r\n  {\r\n    label: \"Re-Enter Password\",\r\n    type: \"password\",\r\n    show: false,\r\n    validated: \"\",\r\n    id: \"f\",\r\n  },\r\n];\r\n\r\nexport default LoginWrapper = React.createClass({\r\n  getInitialState() {\r\n    return {\r\n      signUp: false,\r\n      signupInputs: signupInputs,\r\n      loginInputs: loginInputs,\r\n    };\r\n  },\r\n\r\n  inUpClick() {\r\n    this.setState({ signUp: !this.state.signUp });\r\n    this.animateFields(\"signupInputs\");\r\n    setTimeout(() => {\r\n      this.animateFields(\"loginInputs\");\r\n    }, 100);\r\n  },\r\n\r\n  animateFields(formName) {\r\n    let start, length, newForm;\r\n\r\n    if (formName === \"loginInputs\") {\r\n      newForm = this.state.loginInputs.slice();\r\n    } else if (formName === \"signupInputs\") {\r\n      newForm = this.state.signupInputs.slice();\r\n    }\r\n\r\n    start = 0;\r\n    length = newForm.length;\r\n\r\n    console.log(newForm);\r\n\r\n    let stagger = (i) => {\r\n      if (i < length) {\r\n        setTimeout(() => {\r\n          newForm[i].show = !newForm[i].show;\r\n          this.setState({ [formName]: newForm });\r\n          stagger(i + 1);\r\n        }, 70);\r\n      }\r\n    };\r\n    stagger(start);\r\n  },\r\n\r\n  submitForm(e) {\r\n    e.preventDefault();\r\n  },\r\n\r\n  validateField(event, id) {\r\n    let newState, fieldInState;\r\n    const value = event.target.value;\r\n\r\n    const getField = (field) => field.id === id;\r\n\r\n    const validate = (v) => v.length > 0;\r\n\r\n    if (this.state.signUp === true) {\r\n      newState = this.state.signupInputs.slice();\r\n      fieldInState = newState.find(getField);\r\n\r\n      fieldInState.validated = validate(value) ? true : false;\r\n      this.setState({ signupInputs: newState });\r\n    } else {\r\n      newState = this.state.loginInputs.slice();\r\n      fieldInState = newState.find(getField);\r\n\r\n      fieldInState.validated = validate(value) ? true : false;\r\n      this.setState({ loginInputs: newState });\r\n    }\r\n  },\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Login\r\n          signUp={this.state.signUp}\r\n          inputs={this.state.loginInputs}\r\n          inUpClick={this.inUpClick}\r\n          submitForm={this.submitForm}\r\n          validateField={this.validateField}\r\n        />\r\n        <SignUp\r\n          signUp={this.state.signUp}\r\n          inputs={this.state.signupInputs}\r\n          inUpClick={this.inUpClick}\r\n          submitForm={this.submitForm}\r\n          validateField={this.validateField}\r\n        />\r\n      </div>\r\n    );\r\n  },\r\n});\r\n\r\nconst Login = ({ inputs, signUp, inUpClick, submitForm, validateField }) => (\r\n  <div className={signUp ? \"login login-closed\" : \"login\"}>\r\n    <h1>Log In</h1>\r\n    <hr />\r\n    <Form\r\n      inputs={inputs}\r\n      submitForm={submitForm}\r\n      validateField={validateField}\r\n    />\r\n    <SignupLink inUpClick={inUpClick} />\r\n  </div>\r\n);\r\n\r\nconst SignUp = ({ inputs, signUp, inUpClick, submitForm, validateField }) => (\r\n  <div className={signUp ? \"sign-up\" : \"sign-up sign-up-closed\"}>\r\n    <h1>Sign Up</h1>\r\n    <hr />\r\n    <Form\r\n      inputs={inputs}\r\n      submitForm={submitForm}\r\n      validateField={validateField}\r\n    />\r\n    <LoginLink inUpClick={inUpClick} />\r\n  </div>\r\n);\r\n\r\nconst Form = ({ inputs, submitForm, validateField }) => {\r\n  const inputsMapped = inputs.map((i) => (\r\n    <Input\r\n      label={i.label}\r\n      type={i.type}\r\n      show={i.show}\r\n      validated={i.validated}\r\n      id={i.id}\r\n      validateField={validateField}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <form onSubmit={submitForm}>\r\n      {inputsMapped}\r\n      <Submit />\r\n    </form>\r\n  );\r\n};\r\n\r\nconst Submit = () => (\r\n  <div>\r\n    <hr />\r\n    <button className=\"submit-button\" type=\"submit\">\r\n      {\" \"}\r\n      Submit\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst Input = ({ label, type, show, validated, id, validateField }) => (\r\n  <div className={show ? \"field field-in\" : \"field\"}>\r\n    <label className=\"label\">\r\n      {label}\r\n      <i\r\n        className={validated ? \"fa fa-check animate-check\" : \"\"}\r\n        aria-hidden=\"true\"\r\n      ></i>\r\n    </label>\r\n    <br />\r\n    <input\r\n      className=\"input\"\r\n      type={type}\r\n    //   onBlur={() => {\r\n    //     validateField(event, id);\r\n    //   }}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst SignupLink = ({ inUpClick }) => (\r\n  <div className=\"signup-link\">\r\n    <p className=\"in-out\">\r\n      Don't have an account?{\" \"}\r\n      <a href=\"/\" onClick={inUpClick}>\r\n        Sign Up Here\r\n      </a>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst LoginLink = ({ inUpClick }) => (\r\n  <div className=\"signup-link\">\r\n    <p className=\"in-out\">\r\n      Already have an account?{\" \"}\r\n      <a href=\"/\" onClick={inUpClick}>\r\n        Log In Here\r\n      </a>\r\n    </p>\r\n  </div>\r\n);\r\n\r\n"]},"metadata":{},"sourceType":"module"}